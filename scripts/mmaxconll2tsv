#!/usr/bin/gawk -f

##################################################################
# Methods
function reset() {
    tok_cnt = tok_offset = 0
    msg_id = toks = lemmas = tags = deps = feats = ""
}

function append(arr, tok) {
    if (arr)
	arr = arr " " tok
    else
	arr = tok

    return arr
}

function get_label(feats) {
    pos_snt = (feats ~ /\<Sentiment::[^:]+::Polarity=Positive\>/)
    neg_snt = (feats ~ /\<Sentiment::[^:]+::Polarity=Negative\>/)
    pos_expr = (feats ~ /\<EmoExpression::[^:]+::Polarity=positive\>/)
    neg_expr = (feats ~ /\<EmoExpression::[^:]+::Polarity=negative\>/)

    if (pos_snt) {
	if (neg_snt) {
	    return "mixed"
	} else {
	    return "positive"
	}
    } else if (neg_snt) {
	return "negative"
    } else if (pos_expr) {
	if (neg_expr) {
	    return "mixed"
	} else {
	    return "positive"
	}
    } else if (neg_expr) {
	return "negative"
    }
    return "neutral"
}


function get_prnt_idx(tok_offset, prnt_id) {
    if (prnt_id == "_" || prnt_id == "0")
	return prnt_id

    return tok_offset + prnt_id
}

function output_tweet() {
    if (toks) {
	label = get_label(feats)

	printf("%s\t%s\t%s\t%s\t%s\t%s\t%s\n", msg_id,
	       label, toks, lemmas, tags, deps, feats)
	reset()
    }
}

##################################################################
# Begin
BEGIN {
    FS = OFS = "\t"
    IGNORECASE = 1
    reset()
}

##################################################################
# Main
/^/ {
    output_tweet()
    if ($2 == "id")
	msg_id = $NF
    next
}

NF {
    ++tok_cnt
    toks = append(toks, $2)
    lemmas = append(lemmas, $3)
    tags = append(tags, $5)

    feats_i = $8
    feats = append(feats, feats_i)

    prnt_id = $10
    rel_type = $12
    deps = append(deps, get_prnt_idx(tok_offset, prnt_id) "/" rel_type)
    next
}

1 {
    tok_offset = tok_cnt
}

##################################################################
# End
END {
    output_tweet()
}
